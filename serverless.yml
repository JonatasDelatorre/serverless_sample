service: datalake-template

variablesResolutionMode: 20210326

# Declaração de variáveis customizadas
custom: 
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}
  deployment_bucket: ${self:service}-deployment-${self:custom.stage}
  pythonRequirements:
    dockerizePip: non-linux
  individually-for-dev: 
    dev: False

# Cabeçalho de configuração da stack
provider:
  name: aws
  runtime: python3.8
  stage: dev
  region: us-east-1
  stackName: ${self:service}-${self:custom.stage}
  stackTags:
    Owner: JonatasDelatorre
  deploymentBucket:
    name: ${self:custom.deployment_bucket}
    serverSideEncryption: AES256

# Excluir pacotes para que o deploy do lambda não fique poluido
package:
  individually: true
  patterns:
    - '!venv/**'
    - '!test/**'
    - '!buildspec.yml'
    - '!functions/**'
    - '!README.md'
    - '!node_modules/**'
    - '!src/**'

# Referência para cada arquivos de configurações das funções lambda
functions:
  Extract: ${file(functions/extract.yml)}
  Process: ${file(functions/process.yml)}

# Arquivo com recursos criados utilizando cloudformation
resources: 
  Resources: ${file(resources.yml)}

stepFunctions: ${file(step_functions.yml)}

plugins:
  - serverless-iam-roles-per-function # Plugin de criação de role e policy para cada lambda
  - serverless-python-requirements #Plugin para automatizar a inclusao dos pacotes presentes no requirements
  - serverless-deployment-bucket #Plugin para gerenciar criacao de bucket de deployment
  - serverless-step-functions #Plugin para configurar stepfunction com yml no serverless
